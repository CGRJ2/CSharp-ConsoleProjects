using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace miniGame_OOP_Project
{
    // 맵을 담는 역할만 하자.
    public class MapData
    {
        public string name;
        public string[,] tileMap;


        public MapData(string name, string[,] tileMap)
        {
            this.name = name;
            this.tileMap = tileMap;
        }

        public void PrintMap()
        {
            for (int y = 0; y < tileMap.GetLength(0); y++)
            {
                for (int x = 0; x < tileMap.GetLength(1); x++)
                {
                    Console.Write(tileMap[y, x]);
                }
                Console.WriteLine();
            }
        }
    }

    public class MapDic
    {
        // 싱글톤 저장소
        private static MapDic instance;
        public static MapDic Instance { get { if (instance == null) instance = new MapDic(); return instance; } }

        Dictionary<string, MapData> tileMapDatas = new Dictionary<string, MapData>();

        // 인스턴스 딱 하나 만들건데, 그때 타일 정보들 전부 저장해두기
        private MapDic()
        {
            // 이름과 타일맵 정보 추가
            
            // 마을
            AddMap("Village", new string[20, 30]
            {
                //       0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29
                /*0*/ { "#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#" },
                /*1*/ { "#"," ","H","H","H","H","H","H","H","H"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*2*/ { "#"," ","H"," "," "," "," "," "," ","H"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*3*/ { "#"," ","H"," ","S","H","O","P"," ","H"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*4*/ { "#"," ","H"," "," "," "," "," "," ","H"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*5*/ { "#"," ","H","H","H"," ","H","H","H","H"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*6*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*7*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#","#"," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*8*/ { "#"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","#" },
                /*9*/ { "#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#" },
            });

            // 야외 필드
            AddMap("Field", new string[15, 15]
            {
                //       0     1     2     3     4     5     6     7     8     9     10    11    12    13    14
                /*0*/ { "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#" },
                /*1*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#",  "#" },
                /*2*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#",  "#" },
                /*3*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#",  "#" },
                /*4*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#",  "#" },
                /*5*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#" },
                /*6*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
                /*7*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
                /*9*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
               /*10*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
               /*11*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#" },
               /*12*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#" },
               /*13*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#" },
               /*14*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#" },
               /*15*/ { "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#" },
            });

            AddMap("Cave", new string[10, 15]
            {
                //       0     1     2     3     4     5     6     7     8     9     10    11    12    13    14
                /*0*/ { "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#" },
                /*1*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
                /*2*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#" },
                /*3*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#" },
                /*4*/ { "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#" },
                /*5*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#" },
                /*6*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
                /*7*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
                /*9*/ { "#",  "#",  "#",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  " ",  "#",  "#",  "#" },
               /*15*/ { "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#",  "#" },
            });

        }

        public void AddMap(string name, string[,] tileMap)
        {
            tileMapDatas[name] = new MapData(name, tileMap);
        }

        // Map을 반환하는 함수
        public MapData GetMap(string name)
        {
            return tileMapDatas[name];
        }
    }
}
